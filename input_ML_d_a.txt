#######################################
# File containing input options for ML_d_a.py
# The name of this file can be changed, but then also need to update 'input_file_name' in ML_d_a.py
# Lines that start with '#' are ignored. All comments after '#' are ignored. Empty lines are ignored
# Options can be in any order
######################################
# Machine Learning Algorithm options #
######################################
ML = 'SVR'                           # 'kNN' or 'KRR' or 'SVR'
CV = 'loo'                           # select 'loo' or 'kf'
kfold = 2                            # only used uf CV=kf
plot_target_predictions = 'PCE_values.jpeg' # decide filename for graph plotting predicted and actual values of target property. If None, it is not plotted
### General hyperparameters ##########
optimize_hyperparams = False    	    # whether hyperparameters are optimized (True) or just use initial values (False). If gammaX=0.0, then that hyperparam is not optimized anyway
gamma_el = [0.0,0.0,0.0]             # hyperparameter with weight of d_el
gamma_d  = 1.0                       # hyperparameter with weight of d_fp_d
gamma_a  = 1.0                       # hyperparameter with weight of d_fp_a
gamma_el_lim = (0.0, 2.0)         	 # range in which gamma_el is optimized
gamma_d_lim  = (0.0, 6.0)         	 # range in which gamma_d is optimized
gamma_a_lim  = (0.0, 6.0)         	 # range in which gamma_a is optimized
weight_RMSE = 'PCE2'                 # select one: 'linear', 'PCE', 'PCE2'. Default: 'linear'
### k-Nearest Neighbors ('kNN') ######
Neighbors = 3                        # number of nearest-neighbors
plot_kNN_distances = 'kNN_distances.jpeg' # decide filename for graph of kNN-distances vs rmse at each CV step is printed. If None, it is not plotted
### Kernel Ridge Regression ('KRR') ##
alpha = 1.0                          # kernel hyperparameter
alpha_lim  = (0.0, 2.0)         	    # range in which alpha hyperparam is optimized
### Support Vector Regression ('SVR')#
C = 1.0                              # regularization hyperparameter
epsilon = 0.1                        # epsilon-SVR
C_lim = (0.01,10)                    # range in which C is optimized
epsilon_lim = (0.001,10)             # range in which epsilon is optimized
######################################
######### Data base options ##########
######################################
db_file = 'db_new.csv'         # name of input file with database
Ndata = 20                           # number of d/a pairs
elec_descrip = [5,2,2]          	    # number of electronic descriptors: they must match the number in 'xcols', and be followed by the two structural descriptors
xcols_struc = ["SMILES-DFP","SMILES-AFP"]
xcols_elec0 = ["HOMO-D","LUMO-D","LUMO-A","Reor-D","Reor-A"]
xcols_elec1 = ["sum of f-D", "sum of f-A"]
xcols_elec2 = ["XLOGP3-D","XLOGP3-A"]
ycols = [ "PCE" ]               	    # specify which is target property
FP_length = 2048						    # number of entries of each fingerprint
######################################
############ Verbose options #########
######################################
print_log = True                	    # choose whether information is also written into a log file (Default: True)
log_name  = 'log_ML_d_a.log'         # name of log file
######################################
########### Parallelization ##########
######################################
NCPU = 1                             # select number of CPUs (-1 means all CPUs in a node) (ONLY USED IF "optimize_hyperparams = True")
######################################
